# coding: utf-8

"""
    GTEx Portal API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from gtex_openapi.models.biobank_response import BiobankResponse

class TestBiobankResponse(unittest.TestCase):
    """BiobankResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BiobankResponse:
        """Test BiobankResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BiobankResponse`
        """
        model = BiobankResponse()
        if include_optional:
            return BiobankResponse(
                page = 56,
                page_size = 56,
                records_total = 56,
                records_filtered = 56,
                num_pages = 56,
                sample = [
                    gtex_openapi.models.biobank_sample.BiobankSample(
                        material_type = 'Cells:Cell Line Viable', 
                        sample_id = '', 
                        sample_id_upper = '', 
                        sex = 'male', 
                        rin = 1.337, 
                        has_gtex_image = True, 
                        concentration = 1.337, 
                        autolysis_score = '', 
                        analysis_release = '', 
                        genotype = '', 
                        hardy_scale = null, 
                        pathology_notes = '', 
                        subject_id = '', 
                        tissue_site_detail_id = 'Adipose_Subcutaneous', 
                        has_genotype = True, 
                        original_material_type = 'Cells:Cell Line, Viable', 
                        aliquot_id = '', 
                        tissue_sample_id = '', 
                        age_bracket = '20-29', 
                        brain_tissue_donor = True, 
                        volume = 1.337, 
                        has_expression_data = True, 
                        has_brd_image = True, 
                        tissue_site_detail = '', 
                        pathology_notes_categories = {
                            'key' : True
                            }, 
                        amount = 1.337, 
                        mass = 1.337, 
                        tissue_site = '', 
                        expression = '', )
                    ]
            )
        else:
            return BiobankResponse(
                page = 56,
                page_size = 56,
                records_total = 56,
                records_filtered = 56,
                num_pages = 56,
                sample = [
                    gtex_openapi.models.biobank_sample.BiobankSample(
                        material_type = 'Cells:Cell Line Viable', 
                        sample_id = '', 
                        sample_id_upper = '', 
                        sex = 'male', 
                        rin = 1.337, 
                        has_gtex_image = True, 
                        concentration = 1.337, 
                        autolysis_score = '', 
                        analysis_release = '', 
                        genotype = '', 
                        hardy_scale = null, 
                        pathology_notes = '', 
                        subject_id = '', 
                        tissue_site_detail_id = 'Adipose_Subcutaneous', 
                        has_genotype = True, 
                        original_material_type = 'Cells:Cell Line, Viable', 
                        aliquot_id = '', 
                        tissue_sample_id = '', 
                        age_bracket = '20-29', 
                        brain_tissue_donor = True, 
                        volume = 1.337, 
                        has_expression_data = True, 
                        has_brd_image = True, 
                        tissue_site_detail = '', 
                        pathology_notes_categories = {
                            'key' : True
                            }, 
                        amount = 1.337, 
                        mass = 1.337, 
                        tissue_site = '', 
                        expression = '', )
                    ],
        )
        """

    def testBiobankResponse(self):
        """Test BiobankResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
