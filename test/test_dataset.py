# coding: utf-8

"""
    GTEx Portal API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from gtex_openapi.models.dataset import Dataset

class TestDataset(unittest.TestCase):
    """Dataset unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Dataset:
        """Test Dataset
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Dataset`
        """
        model = Dataset()
        if include_optional:
            return Dataset(
                dataset_id = '',
                db_snp_build = 56,
                dbgap_id = '',
                description = '',
                display_name = '',
                eqtl_subject_count = 56,
                eqtl_tissues_count = 56,
                gencode_version = 'v39',
                genome_build = 'GRCh38/hg38',
                organization = '',
                rna_seq_and_genotype_sample_count = 56,
                rna_seq_sample_count = 56,
                subject_count = 56,
                tissue_count = 56
            )
        else:
            return Dataset(
                dataset_id = '',
                db_snp_build = 56,
                description = '',
                display_name = '',
                eqtl_subject_count = 56,
                eqtl_tissues_count = 56,
                gencode_version = 'v39',
                genome_build = 'GRCh38/hg38',
                organization = '',
                rna_seq_and_genotype_sample_count = 56,
                rna_seq_sample_count = 56,
                subject_count = 56,
                tissue_count = 56,
        )
        """

    def testDataset(self):
        """Test Dataset"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
