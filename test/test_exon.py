# coding: utf-8

"""
    GTEx Portal API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from gtex_openapi.models.exon import Exon

class TestExon(unittest.TestCase):
    """Exon unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Exon:
        """Test Exon
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Exon`
        """
        model = Exon()
        if include_optional:
            return Exon(
                feature_type = '',
                end = 56,
                genome_build = 'GRCh38/hg38',
                start = 56,
                exon_id = '',
                source = '',
                chromosome = 'chr1',
                gencode_id = '',
                transcript_id = '',
                gene_symbol = '',
                gencode_version = 'v39',
                strand = '+',
                exon_number = ''
            )
        else:
            return Exon(
                feature_type = '',
                end = 56,
                genome_build = 'GRCh38/hg38',
                start = 56,
                exon_id = '',
                source = '',
                chromosome = 'chr1',
                gencode_id = '',
                transcript_id = '',
                gene_symbol = '',
                gencode_version = 'v39',
                strand = '+',
                exon_number = '',
        )
        """

    def testExon(self):
        """Test Exon"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
