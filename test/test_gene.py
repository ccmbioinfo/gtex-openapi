# coding: utf-8

"""
    GTEx Portal API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from gtex_openapi.models.gene import Gene

class TestGene(unittest.TestCase):
    """Gene unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Gene:
        """Test Gene
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Gene`
        """
        model = Gene()
        if include_optional:
            return Gene(
                chromosome = 'chr1',
                data_source = '',
                description = '',
                end = 56,
                entrez_gene_id = '',
                gencode_id = '',
                gencode_version = 'v39',
                gene_status = '',
                gene_symbol = '',
                gene_symbol_upper = '',
                gene_type = '',
                genome_build = 'GRCh38/hg38',
                start = 56,
                strand = '+',
                tss = 56
            )
        else:
            return Gene(
                chromosome = 'chr1',
                data_source = '',
                end = 56,
                gencode_id = '',
                gencode_version = 'v39',
                gene_status = '',
                gene_symbol = '',
                gene_symbol_upper = '',
                gene_type = '',
                genome_build = 'GRCh38/hg38',
                start = 56,
                strand = '+',
                tss = 56,
        )
        """

    def testGene(self):
        """Test Gene"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
