# coding: utf-8

"""
    GTEx Portal API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from gtex_openapi.models.paginated_response_tissue_site_detail import PaginatedResponseTissueSiteDetail

class TestPaginatedResponseTissueSiteDetail(unittest.TestCase):
    """PaginatedResponseTissueSiteDetail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedResponseTissueSiteDetail:
        """Test PaginatedResponseTissueSiteDetail
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginatedResponseTissueSiteDetail`
        """
        model = PaginatedResponseTissueSiteDetail()
        if include_optional:
            return PaginatedResponseTissueSiteDetail(
                data = [
                    gtex_openapi.models.tissue_site_detail.TissueSiteDetail(
                        tissue_site_detail_id = 'Adipose_Subcutaneous', 
                        color_hex = '', 
                        color_rgb = '', 
                        dataset_id = 'gtex_v8', 
                        e_gene_count = 56, 
                        expressed_gene_count = 56, 
                        has_e_genes = True, 
                        has_s_genes = True, 
                        mapped_in_hubmap = True, 
                        eqtl_sample_summary = gtex_openapi.models.sex_based_summary.SexBasedSummary(
                            total_count = 56, 
                            female = gtex_openapi.models.age_and_count_summary.AgeAndCountSummary(
                                age_max = 56, 
                                age_min = 56, 
                                age_mean = 1.337, 
                                count = 56, ), 
                            male = gtex_openapi.models.age_and_count_summary.AgeAndCountSummary(
                                age_max = 56, 
                                age_min = 56, 
                                age_mean = 1.337, 
                                count = 56, ), ), 
                        rna_seq_sample_summary = gtex_openapi.models.sex_based_summary.SexBasedSummary(
                            total_count = 56, 
                            female = , 
                            male = , ), 
                        s_gene_count = 56, 
                        sampling_site = '', 
                        tissue_site = '', 
                        tissue_site_detail = '', 
                        tissue_site_detail_abbr = '', 
                        ontology_id = 'UBERON:EFO_0000572', 
                        ontology_iri = '', )
                    ],
                paging_info = gtex_openapi.models.pagination_info.PaginationInfo(
                    number_of_pages = 56, 
                    page = 56, 
                    max_items_per_page = 56, 
                    total_number_of_items = 56, )
            )
        else:
            return PaginatedResponseTissueSiteDetail(
                data = [
                    gtex_openapi.models.tissue_site_detail.TissueSiteDetail(
                        tissue_site_detail_id = 'Adipose_Subcutaneous', 
                        color_hex = '', 
                        color_rgb = '', 
                        dataset_id = 'gtex_v8', 
                        e_gene_count = 56, 
                        expressed_gene_count = 56, 
                        has_e_genes = True, 
                        has_s_genes = True, 
                        mapped_in_hubmap = True, 
                        eqtl_sample_summary = gtex_openapi.models.sex_based_summary.SexBasedSummary(
                            total_count = 56, 
                            female = gtex_openapi.models.age_and_count_summary.AgeAndCountSummary(
                                age_max = 56, 
                                age_min = 56, 
                                age_mean = 1.337, 
                                count = 56, ), 
                            male = gtex_openapi.models.age_and_count_summary.AgeAndCountSummary(
                                age_max = 56, 
                                age_min = 56, 
                                age_mean = 1.337, 
                                count = 56, ), ), 
                        rna_seq_sample_summary = gtex_openapi.models.sex_based_summary.SexBasedSummary(
                            total_count = 56, 
                            female = , 
                            male = , ), 
                        s_gene_count = 56, 
                        sampling_site = '', 
                        tissue_site = '', 
                        tissue_site_detail = '', 
                        tissue_site_detail_abbr = '', 
                        ontology_id = 'UBERON:EFO_0000572', 
                        ontology_iri = '', )
                    ],
                paging_info = gtex_openapi.models.pagination_info.PaginationInfo(
                    number_of_pages = 56, 
                    page = 56, 
                    max_items_per_page = 56, 
                    total_number_of_items = 56, ),
        )
        """

    def testPaginatedResponseTissueSiteDetail(self):
        """Test PaginatedResponseTissueSiteDetail"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
