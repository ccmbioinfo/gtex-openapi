# coding: utf-8

"""
    GTEx Portal API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from gtex_openapi.models.post_dynamic_eqtl_result import PostDynamicEqtlResult

class TestPostDynamicEqtlResult(unittest.TestCase):
    """PostDynamicEqtlResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostDynamicEqtlResult:
        """Test PostDynamicEqtlResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostDynamicEqtlResult`
        """
        model = PostDynamicEqtlResult()
        if include_optional:
            return PostDynamicEqtlResult(
                data = [
                    gtex_openapi.models.post_eqtl.PostEqtl(
                        dataset_id = 'gtex_v8', 
                        error = null, 
                        gencode_id = '', 
                        gene_symbol = '', 
                        message = '', 
                        nes = null, 
                        p_value = null, 
                        p_value_threshold = null, 
                        snp_id = '', 
                        t_statistic = null, 
                        tissue_site_detail_id = 'Adipose_Subcutaneous', 
                        variant_id = '', )
                    ],
                errors = [
                    gtex_openapi.models.post_eqtl_error.PostEqtlError(
                        error_message = '', 
                        variant_id = '', 
                        gencode_id = '', 
                        tissue_site_detail_id = null, )
                    ]
            )
        else:
            return PostDynamicEqtlResult(
                data = [
                    gtex_openapi.models.post_eqtl.PostEqtl(
                        dataset_id = 'gtex_v8', 
                        error = null, 
                        gencode_id = '', 
                        gene_symbol = '', 
                        message = '', 
                        nes = null, 
                        p_value = null, 
                        p_value_threshold = null, 
                        snp_id = '', 
                        t_statistic = null, 
                        tissue_site_detail_id = 'Adipose_Subcutaneous', 
                        variant_id = '', )
                    ],
                errors = [
                    gtex_openapi.models.post_eqtl_error.PostEqtlError(
                        error_message = '', 
                        variant_id = '', 
                        gencode_id = '', 
                        tissue_site_detail_id = null, )
                    ],
        )
        """

    def testPostDynamicEqtlResult(self):
        """Test PostDynamicEqtlResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
