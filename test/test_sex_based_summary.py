# coding: utf-8

"""
    GTEx Portal API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from gtex_openapi.models.sex_based_summary import SexBasedSummary

class TestSexBasedSummary(unittest.TestCase):
    """SexBasedSummary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SexBasedSummary:
        """Test SexBasedSummary
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SexBasedSummary`
        """
        model = SexBasedSummary()
        if include_optional:
            return SexBasedSummary(
                total_count = 56,
                female = gtex_openapi.models.age_and_count_summary.AgeAndCountSummary(
                    age_max = 56, 
                    age_min = 56, 
                    age_mean = 1.337, 
                    count = 56, ),
                male = gtex_openapi.models.age_and_count_summary.AgeAndCountSummary(
                    age_max = 56, 
                    age_min = 56, 
                    age_mean = 1.337, 
                    count = 56, )
            )
        else:
            return SexBasedSummary(
                total_count = 56,
                female = gtex_openapi.models.age_and_count_summary.AgeAndCountSummary(
                    age_max = 56, 
                    age_min = 56, 
                    age_mean = 1.337, 
                    count = 56, ),
                male = gtex_openapi.models.age_and_count_summary.AgeAndCountSummary(
                    age_max = 56, 
                    age_min = 56, 
                    age_mean = 1.337, 
                    count = 56, ),
        )
        """

    def testSexBasedSummary(self):
        """Test SexBasedSummary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
