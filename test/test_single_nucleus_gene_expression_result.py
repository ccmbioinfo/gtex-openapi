# coding: utf-8

"""
    GTEx Portal API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from gtex_openapi.models.single_nucleus_gene_expression_result import SingleNucleusGeneExpressionResult

class TestSingleNucleusGeneExpressionResult(unittest.TestCase):
    """SingleNucleusGeneExpressionResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SingleNucleusGeneExpressionResult:
        """Test SingleNucleusGeneExpressionResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SingleNucleusGeneExpressionResult`
        """
        model = SingleNucleusGeneExpressionResult()
        if include_optional:
            return SingleNucleusGeneExpressionResult(
                tissue_site_detail_id = 'Adipose_Subcutaneous',
                ontology_id = 'UBERON:EFO_0000572',
                dataset_id = 'gtex_v8',
                gencode_id = '',
                gene_symbol = '',
                cell_types = [
                    gtex_openapi.models.cell_type_info.CellTypeInfo(
                        cell_type = '', 
                        count = 56, 
                        mean_with_zeros = 1.337, 
                        mean_without_zeros = 1.337, 
                        median_with_zeros = 1.337, 
                        median_without_zeros = 1.337, 
                        num_zeros = 56, 
                        data = [
                            1.337
                            ], )
                    ],
                unit = 'TPM'
            )
        else:
            return SingleNucleusGeneExpressionResult(
                tissue_site_detail_id = 'Adipose_Subcutaneous',
                ontology_id = 'UBERON:EFO_0000572',
                dataset_id = 'gtex_v8',
                gencode_id = '',
                gene_symbol = '',
                cell_types = [
                    gtex_openapi.models.cell_type_info.CellTypeInfo(
                        cell_type = '', 
                        count = 56, 
                        mean_with_zeros = 1.337, 
                        mean_without_zeros = 1.337, 
                        median_with_zeros = 1.337, 
                        median_without_zeros = 1.337, 
                        num_zeros = 56, 
                        data = [
                            1.337
                            ], )
                    ],
                unit = 'TPM',
        )
        """

    def testSingleNucleusGeneExpressionResult(self):
        """Test SingleNucleusGeneExpressionResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
