# coding: utf-8

"""
    GTEx Portal API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from gtex_openapi.models.single_tissue_sqtl import SingleTissueSqtl

class TestSingleTissueSqtl(unittest.TestCase):
    """SingleTissueSqtl unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SingleTissueSqtl:
        """Test SingleTissueSqtl
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SingleTissueSqtl`
        """
        model = SingleTissueSqtl()
        if include_optional:
            return SingleTissueSqtl(
                snp_id = '',
                pos = 56,
                snp_id_upper = '',
                variant_id = '',
                gene_symbol = '',
                p_value = 1.337,
                gene_symbol_upper = '',
                dataset_id = 'gtex_v8',
                tissue_site_detail_id = 'Adipose_Subcutaneous',
                ontology_id = 'UBERON:EFO_0000572',
                chromosome = 'chr1',
                gencode_id = '',
                nes = 1.337,
                phenotype_id = ''
            )
        else:
            return SingleTissueSqtl(
                pos = 56,
                variant_id = '',
                gene_symbol = '',
                p_value = 1.337,
                gene_symbol_upper = '',
                dataset_id = 'gtex_v8',
                tissue_site_detail_id = 'Adipose_Subcutaneous',
                ontology_id = 'UBERON:EFO_0000572',
                chromosome = 'chr1',
                gencode_id = '',
                nes = 1.337,
                phenotype_id = '',
        )
        """

    def testSingleTissueSqtl(self):
        """Test SingleTissueSqtl"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
